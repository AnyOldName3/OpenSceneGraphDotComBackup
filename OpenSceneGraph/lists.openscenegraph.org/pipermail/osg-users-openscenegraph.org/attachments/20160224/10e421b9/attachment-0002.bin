<?xml version="1.0" encoding="UTF-8" ?>
<compositor>
    <shader name="standard_vs" type="vertex">
        <source>
        <![CDATA[
        void main(void)
        {
           gl_Position = ftransform();
           gl_TexCoord[0] = gl_MultiTexCoord0;
        }
        ]]>
        </source>
    </shader>
    
    
    <shader name="bloom_ps" type="fragment">
        <source>
        <![CDATA[
        uniform sampler2D sceneTex;
        void main()
        {
           vec4 sum = vec4(0);
           vec2 texcoord = vec2(gl_TexCoord[0]);
           int j;
           int i;
           vec4 original = texture2D(sceneTex, texcoord );
           gl_FragColor = original*vec4(1.0);
        }

        ]]>
        </source>
    </shader>
    
    
    <buffer_template name="sceneBufferTemplate" type="2d">
        <internal_format>rgba</internal_format>
        <source_format>rgba</source_format>
        <source_type>ubyte</source_type>
    </buffer_template>
    
    <buffer name="originalScene" width="1920" height="1080" template="sceneBufferTemplate" />
    
    <technique>
        <forward_pass name="HDR_OriginalScene">
            <clear_color>0 0 0 1</clear_color>
            <output_buffer target="color">originalScene</output_buffer>
        </forward_pass>

        <deferred_pass name="Bloom">
            <uniform name="amount" type="float"><value>0.2</value></uniform>
            <input_buffer unit="0" varname="sceneTex">originalScene</input_buffer>
            <shader>standard_vs</shader>
            <shader>bloom_ps</shader>
        </deferred_pass>
        
        
    </technique>
</compositor>