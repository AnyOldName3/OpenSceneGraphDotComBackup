Running with expanded trace output on.
/home/hallmw/Projects/osgQt/CMakeLists.txt(1):  set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS TRUE )
/home/hallmw/Projects/osgQt/CMakeLists.txt(2):  set_property(GLOBAL PROPERTY USE_FOLDERS ON )
/home/hallmw/Projects/osgQt/CMakeLists.txt(4):  IF(WIN32 )
/home/hallmw/Projects/osgQt/CMakeLists.txt(6):  ELSE(WIN32 )
/home/hallmw/Projects/osgQt/CMakeLists.txt(7):  IF(APPLE )
/home/hallmw/Projects/osgQt/CMakeLists.txt(9):  ELSE(APPLE )
/home/hallmw/Projects/osgQt/CMakeLists.txt(10):  CMAKE_MINIMUM_REQUIRED(VERSION 2.4.4 FATAL_ERROR )
/home/hallmw/Projects/osgQt/CMakeLists.txt(14):  if(COMMAND cmake_policy )
/home/hallmw/Projects/osgQt/CMakeLists.txt(17):  cmake_policy(SET CMP0003 NEW )
/home/hallmw/Projects/osgQt/CMakeLists.txt(21):  cmake_policy(SET CMP0005 NEW )
/home/hallmw/Projects/osgQt/CMakeLists.txt(25):  if(3 GREATER 2 OR ( 3 EQUAL 2 AND 5 GREATER 8 ) OR ( 3 EQUAL 2 AND 5 EQUAL 8 AND 1 GREATER 3 ) )
/home/hallmw/Projects/osgQt/CMakeLists.txt(28):  cmake_policy(SET CMP0017 NEW )
/home/hallmw/Projects/osgQt/CMakeLists.txt(33):  if(3 GREATER 2 OR ( 3 EQUAL 2 AND 5 GREATER 6 ) OR ( 3 EQUAL 2 AND 5 EQUAL 6 AND 1 GREATER 0 ) )
/home/hallmw/Projects/osgQt/CMakeLists.txt(36):  cmake_policy(SET CMP0008 OLD )
/home/hallmw/Projects/osgQt/CMakeLists.txt(40):  if(3 GREATER 2 OR ( 3 EQUAL 2 AND 5 GREATER 8 ) OR ( 3 EQUAL 2 AND 5 EQUAL 8 AND 1 GREATER 10 ) )
/home/hallmw/Projects/osgQt/CMakeLists.txt(43):  cmake_policy(SET CMP0020 OLD )
/home/hallmw/Projects/osgQt/CMakeLists.txt(52):  IF(APPLE )
/home/hallmw/Projects/osgQt/CMakeLists.txt(68):  IF(APPLE )
/home/hallmw/Projects/osgQt/CMakeLists.txt(128):  PROJECT(osgQt )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeSystem.cmake(1):  set(CMAKE_HOST_SYSTEM Linux-4.15.0-33-generic )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeSystem.cmake(2):  set(CMAKE_HOST_SYSTEM_NAME Linux )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeSystem.cmake(3):  set(CMAKE_HOST_SYSTEM_VERSION 4.15.0-33-generic )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeSystem.cmake(4):  set(CMAKE_HOST_SYSTEM_PROCESSOR x86_64 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeSystem.cmake(8):  set(CMAKE_SYSTEM Linux-4.15.0-33-generic )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeSystem.cmake(9):  set(CMAKE_SYSTEM_NAME Linux )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeSystem.cmake(10):  set(CMAKE_SYSTEM_VERSION 4.15.0-33-generic )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeSystem.cmake(11):  set(CMAKE_SYSTEM_PROCESSOR x86_64 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeSystem.cmake(13):  set(CMAKE_CROSSCOMPILING FALSE )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeSystem.cmake(15):  set(CMAKE_SYSTEM_LOADED 1 )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInitialize.cmake(18):  include(Platform/Linux-Initialize OPTIONAL )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInitialize.cmake(20):  set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED 1 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(1):  set(CMAKE_C_COMPILER /usr/bin/cc )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(2):  set(CMAKE_C_COMPILER_ARG1  )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(3):  set(CMAKE_C_COMPILER_ID GNU )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(4):  set(CMAKE_C_COMPILER_VERSION 5.4.0 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(5):  set(CMAKE_C_COMPILER_WRAPPER  )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(6):  set(CMAKE_C_STANDARD_COMPUTED_DEFAULT 11 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(7):  set(CMAKE_C_COMPILE_FEATURES c_function_prototypes;c_restrict;c_variadic_macros;c_static_assert )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(8):  set(CMAKE_C90_COMPILE_FEATURES c_function_prototypes )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(9):  set(CMAKE_C99_COMPILE_FEATURES c_restrict;c_variadic_macros )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(10):  set(CMAKE_C11_COMPILE_FEATURES c_static_assert )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(12):  set(CMAKE_C_PLATFORM_ID Linux )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(13):  set(CMAKE_C_SIMULATE_ID  )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(14):  set(CMAKE_C_SIMULATE_VERSION  )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(16):  set(CMAKE_AR /usr/bin/ar )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(17):  set(CMAKE_RANLIB /usr/bin/ranlib )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(18):  set(CMAKE_LINKER /usr/bin/ld )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(19):  set(CMAKE_COMPILER_IS_GNUCC 1 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(20):  set(CMAKE_C_COMPILER_LOADED 1 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(21):  set(CMAKE_C_COMPILER_WORKS TRUE )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(22):  set(CMAKE_C_ABI_COMPILED TRUE )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(23):  set(CMAKE_COMPILER_IS_MINGW )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(24):  set(CMAKE_COMPILER_IS_CYGWIN )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(25):  if(CMAKE_COMPILER_IS_CYGWIN )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(30):  set(CMAKE_C_COMPILER_ENV_VAR CC )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(32):  if(CMAKE_COMPILER_IS_MINGW )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(35):  set(CMAKE_C_COMPILER_ID_RUN 1 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(36):  set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(37):  set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(38):  set(CMAKE_C_LINKER_PREFERENCE 10 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(41):  set(CMAKE_C_SIZEOF_DATA_PTR 8 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(42):  set(CMAKE_C_COMPILER_ABI ELF )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(43):  set(CMAKE_C_LIBRARY_ARCHITECTURE x86_64-linux-gnu )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(45):  if(CMAKE_C_SIZEOF_DATA_PTR )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(46):  set(CMAKE_SIZEOF_VOID_P 8 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(49):  if(CMAKE_C_COMPILER_ABI )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(50):  set(CMAKE_INTERNAL_PLATFORM_ABI ELF )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(53):  if(CMAKE_C_LIBRARY_ARCHITECTURE )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(54):  set(CMAKE_LIBRARY_ARCHITECTURE x86_64-linux-gnu )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(57):  set(CMAKE_C_CL_SHOWINCLUDES_PREFIX  )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(58):  if(CMAKE_C_CL_SHOWINCLUDES_PREFIX )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(65):  set(CMAKE_C_IMPLICIT_LINK_LIBRARIES c )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(66):  set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES /usr/lib/gcc/x86_64-linux-gnu/5;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCCompiler.cmake(67):  set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER /usr/bin/c++ )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID GNU )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION 5.4.0 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_WRAPPER  )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 98 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_COMPILE_FEATURES cxx_template_template_parameters;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX98_COMPILE_FEATURES cxx_template_template_parameters )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX11_COMPILE_FEATURES cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX14_COMPILE_FEATURES cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX_PLATFORM_ID Linux )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX_SIMULATE_ID  )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(14):  set(CMAKE_CXX_SIMULATE_VERSION  )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(16):  set(CMAKE_AR /usr/bin/ar )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(17):  set(CMAKE_RANLIB /usr/bin/ranlib )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(18):  set(CMAKE_LINKER /usr/bin/ld )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(19):  set(CMAKE_COMPILER_IS_GNUCXX 1 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(20):  set(CMAKE_CXX_COMPILER_LOADED 1 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(21):  set(CMAKE_CXX_COMPILER_WORKS TRUE )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(22):  set(CMAKE_CXX_ABI_COMPILED TRUE )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(23):  set(CMAKE_COMPILER_IS_MINGW )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(24):  set(CMAKE_COMPILER_IS_CYGWIN )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(25):  if(CMAKE_COMPILER_IS_CYGWIN )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(30):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(32):  if(CMAKE_COMPILER_IS_MINGW )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(35):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(36):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(37):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;mm;CPP )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(38):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(39):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(42):  set(CMAKE_CXX_SIZEOF_DATA_PTR 8 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(43):  set(CMAKE_CXX_COMPILER_ABI ELF )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(44):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE x86_64-linux-gnu )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(46):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(47):  set(CMAKE_SIZEOF_VOID_P 8 )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(50):  if(CMAKE_CXX_COMPILER_ABI )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(51):  set(CMAKE_INTERNAL_PLATFORM_ABI ELF )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(54):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(55):  set(CMAKE_LIBRARY_ARCHITECTURE x86_64-linux-gnu )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(58):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(59):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(66):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES stdc++;m;c )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(67):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES /usr/lib/gcc/x86_64-linux-gnu/5;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib )
/home/hallmw/Projects/osgQt/CMakeFiles/3.5.1/CMakeCXXCompiler.cmake(68):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(24):  set(APPLE )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(25):  set(UNIX )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(26):  set(CYGWIN )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(27):  set(WIN32 )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(31):  include(CMakeGenericSystem )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(15):  set(CMAKE_SHARED_LIBRARY_C_FLAGS  )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(16):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(17):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(18):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(19):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(20):  set(CMAKE_INCLUDE_FLAG_C -I )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(21):  set(CMAKE_INCLUDE_FLAG_C_SEP  )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(22):  set(CMAKE_LIBRARY_PATH_FLAG -L )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(23):  set(CMAKE_LIBRARY_PATH_TERMINATOR  )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(24):  set(CMAKE_LINK_LIBRARY_FLAG -l )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(26):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(27):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(28):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(29):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(30):  set(CMAKE_SHARED_LIBRARY_SUFFIX .so )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(31):  set(CMAKE_EXECUTABLE_SUFFIX  )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(32):  set(CMAKE_DL_LIBS dl )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(34):  set(CMAKE_FIND_LIBRARY_PREFIXES lib )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(35):  set(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(38):  set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(40):  set(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(42):  set(CMAKE_SKIP_INSTALL_RPATH NO CACHE BOOL If set, runtime paths are not added when installing shared libraries, but are added when building. )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(45):  set(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(47):  if(CMAKE_GENERATOR MATCHES Make )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(48):  set(CMAKE_COLOR_MAKEFILE ON CACHE BOOL Enable/Disable color output during build. )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(51):  mark_as_advanced(CMAKE_COLOR_MAKEFILE )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(52):  if(DEFINED CMAKE_RULE_MESSAGES )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(55):  if(DEFINED CMAKE_TARGET_MESSAGES )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(58):  if(CMAKE_GENERATOR MATCHES Unix Makefiles )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(59):  set(CMAKE_EXPORT_COMPILE_COMMANDS OFF CACHE BOOL Enable/Disable output of compile commands during generation. )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(62):  mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(66):  if(CMAKE_GENERATOR MATCHES Ninja )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(80):  function(GetDefaultWindowsPrefixBase var )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(166):  if(NOT DEFINED CMAKE_INSTALL_PREFIX )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(171):  if(CMAKE_HOST_UNIX )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(172):  set(CMAKE_INSTALL_PREFIX /usr/local CACHE PATH Install path prefix, prepended onto install directories. )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(184):  set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Unspecified )
/usr/share/cmake-3.5/Modules/CMakeGenericSystem.cmake(186):  mark_as_advanced(CMAKE_SKIP_RPATH CMAKE_SKIP_INSTALL_RPATH CMAKE_VERBOSE_MAKEFILE )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(34):  set(CMAKE_SYSTEM_INFO_FILE Platform/Linux )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(36):  include(Platform/Linux OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(1):  set(CMAKE_DL_LIBS dl )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(2):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG -Wl,-rpath, )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(3):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP : )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(4):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG -Wl,-rpath-link, )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(5):  set(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG -Wl,-soname, )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(6):  set(CMAKE_EXE_EXPORTS_C_FLAG -Wl,--export-dynamic )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(10):  set(CMAKE_PLATFORM_USES_PATH_WHEN_NO_SONAME 1 )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(16):  foreach(type SHARED_LIBRARY SHARED_MODULE EXE )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(17):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(18):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(17):  set(CMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(18):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(17):  set(CMAKE_EXE_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(18):  set(CMAKE_EXE_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(29):  if(DEFINED CMAKE_INSTALL_SO_NO_EXE )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(32):  set(CMAKE_INSTALL_SO_NO_EXE 1 CACHE INTERNAL Install .so files without execute permission. )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(49):  set(CMAKE_LIBRARY_ARCHITECTURE_REGEX [a-z0-9_]+(-[a-z0-9_]+)?-linux-gnu[a-z0-9_]* )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(51):  include(Platform/UnixPaths )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(20):  if(__UNIX_PATHS_INCLUDED )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(23):  set(__UNIX_PATHS_INCLUDED 1 )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(25):  set(UNIX 1 )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(29):  get_filename_component(_CMAKE_INSTALL_DIR /usr/share/cmake-3.5 PATH )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(30):  get_filename_component(_CMAKE_INSTALL_DIR /usr/share PATH )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(34):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH /usr/local /usr / /usr )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(41):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(42):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH /usr/local )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(46):  if(CMAKE_STAGING_PREFIX )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(55):  list(APPEND CMAKE_SYSTEM_INCLUDE_PATH /usr/include/w32api /usr/X11R6/include /usr/include/X11 /usr/pkg/include /opt/csw/include /opt/include /usr/openwin/include )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(68):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH /usr/lib/w32api /usr/X11R6/lib /usr/lib/X11 /usr/pkg/lib /opt/csw/lib /opt/lib /usr/openwin/lib )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(81):  list(APPEND CMAKE_SYSTEM_PROGRAM_PATH /usr/pkg/bin )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(85):  list(APPEND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES /lib /lib32 /lib64 /usr/lib /usr/lib32 /usr/lib64 )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(89):  list(APPEND CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES /usr/include )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(92):  list(APPEND CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES /usr/include )
/usr/share/cmake-3.5/Modules/Platform/UnixPaths.cmake(97):  set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS TRUE )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(55):  if(NOT CMAKE_CROSSCOMPILING AND EXISTS /etc/debian_version )
/usr/share/cmake-3.5/Modules/Platform/Linux.cmake(56):  set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS FALSE )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(38):  if(NOT _INCLUDED_SYSTEM_INFO_FILE )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(53):  if(CMAKE_EXTRA_GENERATOR )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(63):  if(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(64):  set(CMAKE_SHARED_MODULE_PREFIX lib )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(65):  set(CMAKE_SHARED_MODULE_SUFFIX .so )
/usr/share/cmake-3.5/Modules/CMakeSystemSpecificInformation.cmake(69):  set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(21):  include(CMakeLanguageInformation )
/usr/share/cmake-3.5/Modules/CMakeLanguageInformation.cmake(19):  macro(__cmake_include_compiler_wrapper lang )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(25):  if(UNIX )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(26):  set(CMAKE_C_OUTPUT_EXTENSION .o )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(31):  set(_INCLUDED_FILE 0 )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(34):  if(CMAKE_C_COMPILER_ID )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(35):  include(Compiler/GNU-C OPTIONAL )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(1):  include(Compiler/GNU )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(16):  if(__COMPILER_GNU )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(19):  set(__COMPILER_GNU 1 )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(21):  macro(__compiler_gnu lang )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(2):  __compiler_gnu(C )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(23):  set(CMAKE_C_VERBOSE_FLAG -v )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(24):  set(CMAKE_C_COMPILE_OPTIONS_PIC -fPIC )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(25):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 3.4 )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(26):  set(CMAKE_C_COMPILE_OPTIONS_PIE -fPIE )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(28):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.2 )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(29):  set(CMAKE_C_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(31):  set(CMAKE_SHARED_LIBRARY_C_FLAGS -fPIC )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(32):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(33):  set(CMAKE_C_COMPILE_OPTIONS_SYSROOT --sysroot= )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(39):  get_property(_IN_TC GLOBAL PROPERTY IN_TRY_COMPILE )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(40):  if(NOT _IN_TC OR CMAKE_FORCE_DEPFILES )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(44):  set(CMAKE_DEPFILE_FLAGS_C -MMD -MT <OBJECT> -MF <DEPFILE> )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(48):  set(CMAKE_C_FLAGS_INIT  )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(49):  set(CMAKE_C_FLAGS_DEBUG_INIT -g )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(50):  set(CMAKE_C_FLAGS_MINSIZEREL_INIT -Os -DNDEBUG )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(51):  set(CMAKE_C_FLAGS_RELEASE_INIT -O3 -DNDEBUG )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(52):  set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT -O2 -g -DNDEBUG )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(53):  set(CMAKE_C_CREATE_PREPROCESSED_SOURCE <CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(54):  set(CMAKE_C_CREATE_ASSEMBLY_SOURCE <CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(55):  if(NOT APPLE )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(56):  set(CMAKE_INCLUDE_SYSTEM_FLAG_C -isystem  )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(4):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.5 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(5):  set(CMAKE_C90_STANDARD_COMPILE_OPTION -std=c90 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(6):  set(CMAKE_C90_EXTENSION_COMPILE_OPTION -std=gnu90 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(12):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.4 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(13):  set(CMAKE_C99_STANDARD_COMPILE_OPTION -std=c99 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(14):  set(CMAKE_C99_EXTENSION_COMPILE_OPTION -std=gnu99 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(17):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.7 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(18):  set(CMAKE_C11_STANDARD_COMPILE_OPTION -std=c11 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(19):  set(CMAKE_C11_EXTENSION_COMPILE_OPTION -std=gnu11 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(25):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.4 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(26):  if(NOT CMAKE_C_COMPILER_FORCED )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(27):  if(NOT CMAKE_C_STANDARD_COMPUTED_DEFAULT )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(30):  set(CMAKE_C_STANDARD_DEFAULT 11 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-C.cmake(42):  macro(cmake_record_c_compile_features )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(38):  set(CMAKE_BASE_NAME )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(39):  get_filename_component(CMAKE_BASE_NAME /usr/bin/cc NAME_WE )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(40):  if(CMAKE_COMPILER_IS_GNUCC )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(41):  set(CMAKE_BASE_NAME gcc )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(46):  if(CMAKE_SYSTEM_PROCESSOR )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(47):  if(CMAKE_C_COMPILER_ID )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(48):  include(Platform/Linux-GNU-C-x86_64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(50):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(51):  include(Platform/Linux-gcc-x86_64 OPTIONAL )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(57):  if(CMAKE_C_COMPILER_ID )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(58):  include(Platform/Linux-GNU-C OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-3.5/Modules/Platform/Linux-GNU-C.cmake(1):  include(Platform/Linux-GNU )
/usr/share/cmake-3.5/Modules/Platform/Linux-GNU.cmake(16):  if(__LINUX_COMPILER_GNU )
/usr/share/cmake-3.5/Modules/Platform/Linux-GNU.cmake(19):  set(__LINUX_COMPILER_GNU 1 )
/usr/share/cmake-3.5/Modules/Platform/Linux-GNU.cmake(21):  macro(__linux_compiler_gnu lang )
/usr/share/cmake-3.5/Modules/Platform/Linux-GNU-C.cmake(2):  __linux_compiler_gnu(C )
/usr/share/cmake-3.5/Modules/Platform/Linux-GNU.cmake(24):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS -rdynamic )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(61):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(67):  if(CMAKE_C_COMPILER_WRAPPER )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(75):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(79):  if(CMAKE_C_SIZEOF_DATA_PTR )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(80):  foreach(f  )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(83):  unset(CMAKE_C_ABI_FILES )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(92):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(98):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_C )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(108):  if(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(109):  set(CMAKE_SHARED_MODULE_C_FLAGS -fPIC )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(110):  set(CMAKE_SHARED_MODULE_CREATE_C_FLAGS -shared )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(113):  set(CMAKE_C_FLAGS_INIT   )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(115):  if(CMAKE_C_FLAGS_INIT STREQUAL   )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(116):  set(CMAKE_C_FLAGS_INIT )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(118):  set(CMAKE_C_FLAGS  CACHE STRING Flags used by the compiler during all build types. )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(121):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(123):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(124):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel. )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(127):  set(CMAKE_C_FLAGS_DEBUG -g CACHE STRING Flags used by the compiler during debug builds. )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(129):  set(CMAKE_C_FLAGS_MINSIZEREL -Os -DNDEBUG CACHE STRING Flags used by the compiler during release builds for minimum size. )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(131):  set(CMAKE_C_FLAGS_RELEASE -O3 -DNDEBUG CACHE STRING Flags used by the compiler during release builds. )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(133):  set(CMAKE_C_FLAGS_RELWITHDEBINFO -O2 -g -DNDEBUG CACHE STRING Flags used by the compiler during release builds with debug info. )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(137):  if(CMAKE_C_STANDARD_LIBRARIES_INIT )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(143):  include(CMakeCommonLanguageInclude )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(19):  if(NOT x STREQUAL x )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(25):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(27):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(28):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(32):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(35):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(38):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(41):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(45):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(48):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(52):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(55):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(59):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(62):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(66):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(69):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(73):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(76):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(80):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(83):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(89):  set(CMAKE_EXE_LINKER_FLAGS  CACHE STRING Flags used by the linker. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(93):  set(CMAKE_SHARED_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of dll's. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(97):  set(CMAKE_MODULE_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of modules. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(101):  set(CMAKE_STATIC_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of static libraries. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(105):  set(CMAKE_BUILD_TOOL /usr/bin/make )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(107):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE CMAKE_EXE_LINKER_FLAGS CMAKE_EXE_LINKER_FLAGS_DEBUG CMAKE_EXE_LINKER_FLAGS_MINSIZEREL CMAKE_EXE_LINKER_FLAGS_RELEASE CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_LINKER_FLAGS_DEBUG CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL CMAKE_SHARED_LINKER_FLAGS_RELEASE CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_LINKER_FLAGS_DEBUG CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL CMAKE_MODULE_LINKER_FLAGS_RELEASE CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO CMAKE_STATIC_LINKER_FLAGS CMAKE_STATIC_LINKER_FLAGS_DEBUG CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL CMAKE_STATIC_LINKER_FLAGS_RELEASE CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(173):  if(NOT CMAKE_C_CREATE_SHARED_LIBRARY )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(174):  set(CMAKE_C_CREATE_SHARED_LIBRARY <CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(179):  if(NOT CMAKE_C_CREATE_SHARED_MODULE )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(180):  set(CMAKE_C_CREATE_SHARED_MODULE <CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(185):  if(NOT DEFINED CMAKE_C_ARCHIVE_CREATE )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(186):  set(CMAKE_C_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(188):  if(NOT DEFINED CMAKE_C_ARCHIVE_APPEND )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(189):  set(CMAKE_C_ARCHIVE_APPEND <CMAKE_AR> q  <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(191):  if(NOT DEFINED CMAKE_C_ARCHIVE_FINISH )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(192):  set(CMAKE_C_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(196):  if(NOT CMAKE_C_COMPILE_OBJECT )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(197):  set(CMAKE_C_COMPILE_OBJECT <CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT>   -c <SOURCE> )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(201):  if(NOT CMAKE_C_LINK_EXECUTABLE )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(202):  set(CMAKE_C_LINK_EXECUTABLE <CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES> )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(206):  if(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(207):  set(CMAKE_EXECUTABLE_RUNTIME_C_FLAG -Wl,-rpath, )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(210):  if(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(211):  set(CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP : )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(214):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(215):  set(CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG -Wl,-rpath-link, )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(218):  mark_as_advanced(CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELEASE CMAKE_C_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.5/Modules/CMakeCInformation.cmake(225):  set(CMAKE_C_INFORMATION_LOADED 1 )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(21):  include(CMakeLanguageInformation )
/usr/share/cmake-3.5/Modules/CMakeLanguageInformation.cmake(19):  macro(__cmake_include_compiler_wrapper lang )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(25):  if(UNIX )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(26):  set(CMAKE_CXX_OUTPUT_EXTENSION .o )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(31):  set(_INCLUDED_FILE 0 )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(34):  if(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(35):  include(Compiler/GNU-CXX OPTIONAL )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(1):  include(Compiler/GNU )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(16):  if(__COMPILER_GNU )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(17):  return()
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(2):  __compiler_gnu(CXX )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(23):  set(CMAKE_CXX_VERBOSE_FLAG -v )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(24):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC -fPIC )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(25):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4 )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(26):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE -fPIE )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(28):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.2 )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(29):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(31):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS -fPIC )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(32):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(33):  set(CMAKE_CXX_COMPILE_OPTIONS_SYSROOT --sysroot= )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(39):  get_property(_IN_TC GLOBAL PROPERTY IN_TRY_COMPILE )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(40):  if(NOT _IN_TC OR CMAKE_FORCE_DEPFILES )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(44):  set(CMAKE_DEPFILE_FLAGS_CXX -MMD -MT <OBJECT> -MF <DEPFILE> )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(48):  set(CMAKE_CXX_FLAGS_INIT  )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(49):  set(CMAKE_CXX_FLAGS_DEBUG_INIT -g )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(50):  set(CMAKE_CXX_FLAGS_MINSIZEREL_INIT -Os -DNDEBUG )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(51):  set(CMAKE_CXX_FLAGS_RELEASE_INIT -O3 -DNDEBUG )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(52):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT -O2 -g -DNDEBUG )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(53):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(54):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(55):  if(NOT APPLE )
/usr/share/cmake-3.5/Modules/Compiler/GNU.cmake(56):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(4):  if(WIN32 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(8):  else()
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(9):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.2 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(10):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY_INLINES_HIDDEN -fvisibility-inlines-hidden )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(14):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.4 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(16):  set(CMAKE_CXX98_STANDARD_COMPILE_OPTION -std=c++98 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(17):  set(CMAKE_CXX98_EXTENSION_COMPILE_OPTION -std=gnu++98 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(20):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.7 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(21):  set(CMAKE_CXX11_STANDARD_COMPILE_OPTION -std=c++11 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(22):  set(CMAKE_CXX11_EXTENSION_COMPILE_OPTION -std=gnu++11 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(29):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.9 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(30):  set(CMAKE_CXX14_STANDARD_COMPILE_OPTION -std=c++14 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(31):  set(CMAKE_CXX14_EXTENSION_COMPILE_OPTION -std=gnu++14 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(37):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.4 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(38):  if(NOT CMAKE_CXX_COMPILER_FORCED )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(39):  if(NOT CMAKE_CXX_STANDARD_COMPUTED_DEFAULT )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(42):  set(CMAKE_CXX_STANDARD_DEFAULT 98 )
/usr/share/cmake-3.5/Modules/Compiler/GNU-CXX.cmake(49):  macro(cmake_record_cxx_compile_features )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(38):  set(CMAKE_BASE_NAME )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(39):  get_filename_component(CMAKE_BASE_NAME /usr/bin/c++ NAME_WE )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(41):  if(CMAKE_COMPILER_IS_GNUCXX )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(42):  set(CMAKE_BASE_NAME g++ )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(47):  if(CMAKE_SYSTEM_PROCESSOR )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(48):  if(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(49):  include(Platform/Linux-GNU-CXX-x86_64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(51):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(52):  include(Platform/Linux-g++-x86_64 OPTIONAL )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(57):  if(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(58):  include(Platform/Linux-GNU-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-3.5/Modules/Platform/Linux-GNU-CXX.cmake(1):  include(Platform/Linux-GNU )
/usr/share/cmake-3.5/Modules/Platform/Linux-GNU.cmake(16):  if(__LINUX_COMPILER_GNU )
/usr/share/cmake-3.5/Modules/Platform/Linux-GNU.cmake(17):  return()
/usr/share/cmake-3.5/Modules/Platform/Linux-GNU-CXX.cmake(2):  __linux_compiler_gnu(CXX )
/usr/share/cmake-3.5/Modules/Platform/Linux-GNU.cmake(24):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS -rdynamic )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(60):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(66):  if(CMAKE_CXX_COMPILER_WRAPPER )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(74):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(78):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(79):  foreach(f  )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(82):  unset(CMAKE_CXX_ABI_FILES )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(91):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(97):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(107):  if(NOT CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(111):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIC )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(115):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIE )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(119):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_DLL )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(120):  set(CMAKE_CXX_COMPILE_OPTIONS_DLL  )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(123):  if(NOT CMAKE_SHARED_LIBRARY_CXX_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(127):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(131):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(132):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG -Wl,-rpath, )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(135):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(136):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP : )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(139):  if(NOT CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(140):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG -Wl,-rpath-link, )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(143):  if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(144):  set(CMAKE_EXE_EXPORTS_CXX_FLAG -Wl,--export-dynamic )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(147):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(148):  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG -Wl,-soname, )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(151):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(152):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG -Wl,-rpath, )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(155):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(156):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP : )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(159):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(160):  set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG -Wl,-rpath-link, )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(163):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(164):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH  )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(167):  if(NOT CMAKE_INCLUDE_FLAG_CXX )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(168):  set(CMAKE_INCLUDE_FLAG_CXX -I )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(171):  if(NOT CMAKE_INCLUDE_FLAG_SEP_CXX )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(172):  set(CMAKE_INCLUDE_FLAG_SEP_CXX  )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(178):  if(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(179):  set(CMAKE_SHARED_MODULE_CXX_FLAGS -fPIC )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(180):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS -shared )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(184):  if(NOT CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(188):  if(NOT CMAKE_SHARED_MODULE_CXX_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(193):  foreach(type SHARED_LIBRARY SHARED_MODULE EXE )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(194):  if(NOT CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(195):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(198):  if(NOT CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(199):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(194):  if(NOT CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(195):  set(CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(198):  if(NOT CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(199):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(194):  if(NOT CMAKE_EXE_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(195):  set(CMAKE_EXE_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(198):  if(NOT CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(199):  set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(208):  set(CMAKE_CXX_FLAGS_INIT   )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(210):  if(CMAKE_CXX_FLAGS_INIT STREQUAL   )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(211):  set(CMAKE_CXX_FLAGS_INIT )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(213):  set(CMAKE_CXX_FLAGS  CACHE STRING Flags used by the compiler during all build types. )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(216):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(217):  set(CMAKE_CXX_FLAGS_DEBUG -g CACHE STRING Flags used by the compiler during debug builds. )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(219):  set(CMAKE_CXX_FLAGS_MINSIZEREL -Os -DNDEBUG CACHE STRING Flags used by the compiler during release builds for minimum size. )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(221):  set(CMAKE_CXX_FLAGS_RELEASE -O3 -DNDEBUG CACHE STRING Flags used by the compiler during release builds. )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(223):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO -O2 -g -DNDEBUG CACHE STRING Flags used by the compiler during release builds with debug info. )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(228):  if(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(234):  include(CMakeCommonLanguageInclude )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(19):  if(NOT x STREQUAL x )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(25):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(27):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(28):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(32):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(35):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(38):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(41):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(45):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(48):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(52):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(55):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(59):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(62):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(66):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(69):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(73):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(76):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(80):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(83):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(89):  set(CMAKE_EXE_LINKER_FLAGS  CACHE STRING Flags used by the linker. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(93):  set(CMAKE_SHARED_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of dll's. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(97):  set(CMAKE_MODULE_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of modules. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(101):  set(CMAKE_STATIC_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of static libraries. )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(105):  set(CMAKE_BUILD_TOOL /usr/bin/make )
/usr/share/cmake-3.5/Modules/CMakeCommonLanguageInclude.cmake(107):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE CMAKE_EXE_LINKER_FLAGS CMAKE_EXE_LINKER_FLAGS_DEBUG CMAKE_EXE_LINKER_FLAGS_MINSIZEREL CMAKE_EXE_LINKER_FLAGS_RELEASE CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_LINKER_FLAGS_DEBUG CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL CMAKE_SHARED_LINKER_FLAGS_RELEASE CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_LINKER_FLAGS_DEBUG CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL CMAKE_MODULE_LINKER_FLAGS_RELEASE CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO CMAKE_STATIC_LINKER_FLAGS CMAKE_STATIC_LINKER_FLAGS_DEBUG CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL CMAKE_STATIC_LINKER_FLAGS_RELEASE CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(263):  if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(264):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(269):  if(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(270):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(276):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_CREATE )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(277):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(279):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_APPEND )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(280):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> q  <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(282):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_FINISH )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(283):  set(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(287):  if(NOT CMAKE_CXX_COMPILE_OBJECT )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(288):  set(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER>  <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE> )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(292):  if(NOT CMAKE_CXX_LINK_EXECUTABLE )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(293):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_CXX_COMPILER>  <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES> )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(297):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_RELWITHDEBINFO CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_DEBUG )
/usr/share/cmake-3.5/Modules/CMakeCXXInformation.cmake(305):  set(CMAKE_CXX_INFORMATION_LOADED 1 )
/home/hallmw/Projects/osgQt/CMakeLists.txt(130):  FIND_PACKAGE(OpenSceneGraph 3.0.0 REQUIRED osgDB osgGA osgUtil osgText osgViewer osgWidget )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(119):  include(/usr/share/cmake-3.5/Modules/Findosg_functions.cmake )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(30):  function(OSG_FIND_PATH module header )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(56):  function(OSG_FIND_LIBRARY module library )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(113):  function(OSG_MARK_AS_ADVANCED _module )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(121):  set(_osg_modules_to_process )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(122):  foreach(_osg_component osgDB;osgGA;osgUtil;osgText;osgViewer;osgWidget )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(123):  list(APPEND _osg_modules_to_process osgDB )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(123):  list(APPEND _osg_modules_to_process osgGA )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(123):  list(APPEND _osg_modules_to_process osgUtil )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(123):  list(APPEND _osg_modules_to_process osgText )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(123):  list(APPEND _osg_modules_to_process osgViewer )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(123):  list(APPEND _osg_modules_to_process osgWidget )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(125):  list(APPEND _osg_modules_to_process osg OpenThreads )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(126):  list(REMOVE_DUPLICATES _osg_modules_to_process )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(128):  if(OpenSceneGraph_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(129):  message(STATUS [ FindOpenSceneGraph.cmake: ]  Components = osgDB;osgGA;osgUtil;osgText;osgViewer;osgWidget;osg;OpenThreads )
-- [ FindOpenSceneGraph.cmake:129 ] Components = osgDB;osgGA;osgUtil;osgText;osgViewer;osgWidget;osg;OpenThreads
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(136):  OSG_FIND_PATH(OSG osg/Version )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(31):  string(TOUPPER OSG module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(34):  find_path(OSG_INCLUDE_DIR osg/Version HINTS ENV OSG_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES include PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(137):  if(OpenSceneGraph_MARK_AS_ADVANCED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(142):  if(OSG_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(143):  if(OpenSceneGraph_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(144):  message(STATUS [ FindOpenSceneGraph.cmake: ]  Detected OSG_INCLUDE_DIR = /usr/local/include )
-- [ FindOpenSceneGraph.cmake:144 ] Detected OSG_INCLUDE_DIR = /usr/local/include
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(148):  set(_osg_Version_file /usr/local/include/osg/Version )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(149):  if(/usr/local/include MATCHES \.framework$ AND NOT EXISTS /usr/local/include/osg/Version )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(153):  if(EXISTS /usr/local/include/osg/Version )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(154):  file(STRINGS /usr/local/include/osg/Version _osg_Version_contents REGEX #define (OSG_VERSION_[A-Z]+|OPENSCENEGRAPH_[A-Z]+_VERSION)[ 	]+[0-9]+ )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(160):  string(REGEX MATCH .*#define OSG_VERSION_MAJOR[ 	]+[0-9]+.* _osg_old_defines #define OPENSCENEGRAPH_MAJOR_VERSION    3;#define OPENSCENEGRAPH_MINOR_VERSION    7;#define OPENSCENEGRAPH_PATCH_VERSION    0;#define OSG_VERSION_REVISION 0 )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(162):  string(REGEX MATCH .*#define OPENSCENEGRAPH_MAJOR_VERSION[ 	]+[0-9]+.* _osg_new_defines #define OPENSCENEGRAPH_MAJOR_VERSION    3;#define OPENSCENEGRAPH_MINOR_VERSION    7;#define OPENSCENEGRAPH_PATCH_VERSION    0;#define OSG_VERSION_REVISION 0 )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(164):  if(_osg_old_defines )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(171):  elseif(_osg_new_defines )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(172):  string(REGEX REPLACE .*#define OPENSCENEGRAPH_MAJOR_VERSION[ 	]+([0-9]+).* \1 _osg_VERSION_MAJOR #define OPENSCENEGRAPH_MAJOR_VERSION    3;#define OPENSCENEGRAPH_MINOR_VERSION    7;#define OPENSCENEGRAPH_PATCH_VERSION    0;#define OSG_VERSION_REVISION 0 )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(174):  string(REGEX REPLACE .*#define OPENSCENEGRAPH_MINOR_VERSION[ 	]+([0-9]+).* \1 _osg_VERSION_MINOR #define OPENSCENEGRAPH_MAJOR_VERSION    3;#define OPENSCENEGRAPH_MINOR_VERSION    7;#define OPENSCENEGRAPH_PATCH_VERSION    0;#define OSG_VERSION_REVISION 0 )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(176):  string(REGEX REPLACE .*#define OPENSCENEGRAPH_PATCH_VERSION[ 	]+([0-9]+).* \1 _osg_VERSION_PATCH #define OPENSCENEGRAPH_MAJOR_VERSION    3;#define OPENSCENEGRAPH_MINOR_VERSION    7;#define OPENSCENEGRAPH_PATCH_VERSION    0;#define OSG_VERSION_REVISION 0 )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(182):  unset(_osg_Version_contents )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(184):  set(OPENSCENEGRAPH_VERSION 3.7.0 CACHE INTERNAL The version of OSG which was detected )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(186):  if(OpenSceneGraph_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(187):  message(STATUS [ FindOpenSceneGraph.cmake: ]  Detected version 3.7.0 )
-- [ FindOpenSceneGraph.cmake:187 ] Detected version 3.7.0
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(192):  set(_osg_quiet )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(193):  if(OpenSceneGraph_FIND_QUIETLY )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(199):  foreach(_osg_module osgDB;osgGA;osgUtil;osgText;osgViewer;osgWidget;osg;OpenThreads )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(200):  if(OpenSceneGraph_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(201):  message(STATUS [ FindOpenSceneGraph.cmake: ]  Calling find_package(osgDB  ) )
-- [ FindOpenSceneGraph.cmake:201 ] Calling find_package(osgDB  )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(204):  find_package(osgDB  )
/usr/share/cmake-3.5/Modules/FindosgDB.cmake(49):  include(/usr/share/cmake-3.5/Modules/Findosg_functions.cmake )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(30):  function(OSG_FIND_PATH module header )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(56):  function(OSG_FIND_LIBRARY module library )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(113):  function(OSG_MARK_AS_ADVANCED _module )
/usr/share/cmake-3.5/Modules/FindosgDB.cmake(50):  OSG_FIND_PATH(OSGDB osgDB/DatabasePager )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(31):  string(TOUPPER OSGDB module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(34):  find_path(OSGDB_INCLUDE_DIR osgDB/DatabasePager HINTS ENV OSGDB_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES include PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/FindosgDB.cmake(51):  OSG_FIND_LIBRARY(OSGDB osgDB )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(57):  string(TOUPPER OSGDB module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(59):  find_library(OSGDB_LIBRARY NAMES osgDB HINTS ENV OSGDB_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(77):  find_library(OSGDB_LIBRARY_DEBUG NAMES osgDBd HINTS ENV OSGDB_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(95):  if(NOT OSGDB_LIBRARY_DEBUG )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(97):  set(OSGDB_LIBRARY_DEBUG OSGDB_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(98):  set(OSGDB_LIBRARIES OSGDB_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindosgDB.cmake(53):  include(/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(142):  include(/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(42):  function(FIND_PACKAGE_MESSAGE pkg msg details )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(143):  include(/usr/share/cmake-3.5/Modules/CMakeParseArguments.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(146):  macro(_FPHSA_FAILURE_MESSAGE _msg )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(158):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(187):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
/usr/share/cmake-3.5/Modules/FindosgDB.cmake(54):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(osgDB DEFAULT_MSG OSGDB_LIBRARY OSGDB_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(191):  set(options CONFIG_MODE HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(192):  set(oneValueArgs FAIL_MESSAGE VERSION_VAR FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(193):  set(multiValueArgs REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(194):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS FAIL_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(195):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE DEFAULT_MSG INDEX )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(197):  if(-1 EQUAL -1 )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(198):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(199):  set(FPHSA_REQUIRED_VARS OSGDB_LIBRARY;OSGDB_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(200):  set(FPHSA_VERSION_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(216):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(217):  set(FPHSA_FAIL_MESSAGE Could NOT find osgDB )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(222):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(228):  if(NOT FPHSA_REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(232):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(234):  string(TOUPPER osgDB _NAME_UPPER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(235):  string(TOLOWER osgDB _NAME_LOWER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(237):  if(FPHSA_FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(243):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(244):  set(_FOUND_VAR OSGDB_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(249):  set(MISSING_VARS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(250):  set(DETAILS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(252):  set(FPHSA_FOUND_osgDB TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(253):  foreach(_CURRENT_VAR OSGDB_LIBRARY;OSGDB_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGDB_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_osgDB FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OSGDB_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGDB_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(257):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(258):  set(DETAILS [/usr/local/include] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(261):  if(FPHSA_FOUND_osgDB )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(264):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(265):  set(osgDB_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(266):  set(OSGDB_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(270):  unset(FOUND_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(271):  unset(MISSING_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(273):  if(FPHSA_HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(301):  set(VERSION_MSG  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(302):  set(VERSION_OK TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(303):  set(VERSION  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(306):  if(DEFINED osgDB_FIND_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(364):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(365):  if(VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(370):  if(VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(371):  set(DETAILS [/usr/local/include][v()] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(378):  if(osgDB_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(380):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(382):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(384):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(385):  if(NOT VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(387):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(388):  _FPHSA_FAILURE_MESSAGE(Could NOT find osgDB (missing:  OSGDB_LIBRARY)  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(147):  if(osgDB_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(149):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(150):  if(NOT osgDB_FIND_QUIETLY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(151):  message(STATUS Could NOT find osgDB (missing:  OSGDB_LIBRARY)  )
-- Could NOT find osgDB (missing:  OSGDB_LIBRARY) 
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(394):  set(osgDB_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(395):  set(OSGDB_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(206):  string(TOUPPER osgDB _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(208):  if(OSGDB_FOUND OR OpenSceneGraph_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(209):  list(APPEND OPENSCENEGRAPH_INCLUDE_DIR /usr/local/include )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(210):  list(APPEND OPENSCENEGRAPH_LIBRARIES OSGDB_LIBRARY-NOTFOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(213):  if(OpenSceneGraph_MARK_AS_ADVANCED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(200):  if(OpenSceneGraph_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(201):  message(STATUS [ FindOpenSceneGraph.cmake: ]  Calling find_package(osgGA  ) )
-- [ FindOpenSceneGraph.cmake:201 ] Calling find_package(osgGA  )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(204):  find_package(osgGA  )
/usr/share/cmake-3.5/Modules/FindosgGA.cmake(49):  include(/usr/share/cmake-3.5/Modules/Findosg_functions.cmake )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(30):  function(OSG_FIND_PATH module header )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(56):  function(OSG_FIND_LIBRARY module library )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(113):  function(OSG_MARK_AS_ADVANCED _module )
/usr/share/cmake-3.5/Modules/FindosgGA.cmake(50):  OSG_FIND_PATH(OSGGA osgGA/FlightManipulator )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(31):  string(TOUPPER OSGGA module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(34):  find_path(OSGGA_INCLUDE_DIR osgGA/FlightManipulator HINTS ENV OSGGA_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES include PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/FindosgGA.cmake(51):  OSG_FIND_LIBRARY(OSGGA osgGA )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(57):  string(TOUPPER OSGGA module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(59):  find_library(OSGGA_LIBRARY NAMES osgGA HINTS ENV OSGGA_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(77):  find_library(OSGGA_LIBRARY_DEBUG NAMES osgGAd HINTS ENV OSGGA_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(95):  if(NOT OSGGA_LIBRARY_DEBUG )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(97):  set(OSGGA_LIBRARY_DEBUG OSGGA_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(98):  set(OSGGA_LIBRARIES OSGGA_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindosgGA.cmake(53):  include(/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(142):  include(/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(42):  function(FIND_PACKAGE_MESSAGE pkg msg details )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(143):  include(/usr/share/cmake-3.5/Modules/CMakeParseArguments.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(146):  macro(_FPHSA_FAILURE_MESSAGE _msg )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(158):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(187):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
/usr/share/cmake-3.5/Modules/FindosgGA.cmake(54):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(osgGA DEFAULT_MSG OSGGA_LIBRARY OSGGA_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(191):  set(options CONFIG_MODE HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(192):  set(oneValueArgs FAIL_MESSAGE VERSION_VAR FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(193):  set(multiValueArgs REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(194):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS FAIL_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(195):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE DEFAULT_MSG INDEX )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(197):  if(-1 EQUAL -1 )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(198):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(199):  set(FPHSA_REQUIRED_VARS OSGGA_LIBRARY;OSGGA_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(200):  set(FPHSA_VERSION_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(216):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(217):  set(FPHSA_FAIL_MESSAGE Could NOT find osgGA )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(222):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(228):  if(NOT FPHSA_REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(232):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(234):  string(TOUPPER osgGA _NAME_UPPER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(235):  string(TOLOWER osgGA _NAME_LOWER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(237):  if(FPHSA_FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(243):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(244):  set(_FOUND_VAR OSGGA_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(249):  set(MISSING_VARS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(250):  set(DETAILS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(252):  set(FPHSA_FOUND_osgGA TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(253):  foreach(_CURRENT_VAR OSGGA_LIBRARY;OSGGA_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGGA_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_osgGA FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OSGGA_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGGA_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(257):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(258):  set(DETAILS [/usr/local/include] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(261):  if(FPHSA_FOUND_osgGA )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(264):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(265):  set(osgGA_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(266):  set(OSGGA_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(270):  unset(FOUND_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(271):  unset(MISSING_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(273):  if(FPHSA_HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(301):  set(VERSION_MSG  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(302):  set(VERSION_OK TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(303):  set(VERSION  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(306):  if(DEFINED osgGA_FIND_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(364):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(365):  if(VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(370):  if(VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(371):  set(DETAILS [/usr/local/include][v()] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(378):  if(osgGA_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(380):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(382):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(384):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(385):  if(NOT VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(387):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(388):  _FPHSA_FAILURE_MESSAGE(Could NOT find osgGA (missing:  OSGGA_LIBRARY)  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(147):  if(osgGA_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(149):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(150):  if(NOT osgGA_FIND_QUIETLY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(151):  message(STATUS Could NOT find osgGA (missing:  OSGGA_LIBRARY)  )
-- Could NOT find osgGA (missing:  OSGGA_LIBRARY) 
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(394):  set(osgGA_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(395):  set(OSGGA_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(206):  string(TOUPPER osgGA _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(208):  if(OSGGA_FOUND OR OpenSceneGraph_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(209):  list(APPEND OPENSCENEGRAPH_INCLUDE_DIR /usr/local/include )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(210):  list(APPEND OPENSCENEGRAPH_LIBRARIES OSGGA_LIBRARY-NOTFOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(213):  if(OpenSceneGraph_MARK_AS_ADVANCED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(200):  if(OpenSceneGraph_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(201):  message(STATUS [ FindOpenSceneGraph.cmake: ]  Calling find_package(osgUtil  ) )
-- [ FindOpenSceneGraph.cmake:201 ] Calling find_package(osgUtil  )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(204):  find_package(osgUtil  )
/usr/share/cmake-3.5/Modules/FindosgUtil.cmake(49):  include(/usr/share/cmake-3.5/Modules/Findosg_functions.cmake )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(30):  function(OSG_FIND_PATH module header )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(56):  function(OSG_FIND_LIBRARY module library )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(113):  function(OSG_MARK_AS_ADVANCED _module )
/usr/share/cmake-3.5/Modules/FindosgUtil.cmake(50):  OSG_FIND_PATH(OSGUTIL osgUtil/SceneView )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(31):  string(TOUPPER OSGUTIL module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(34):  find_path(OSGUTIL_INCLUDE_DIR osgUtil/SceneView HINTS ENV OSGUTIL_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES include PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/FindosgUtil.cmake(51):  OSG_FIND_LIBRARY(OSGUTIL osgUtil )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(57):  string(TOUPPER OSGUTIL module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(59):  find_library(OSGUTIL_LIBRARY NAMES osgUtil HINTS ENV OSGUTIL_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(77):  find_library(OSGUTIL_LIBRARY_DEBUG NAMES osgUtild HINTS ENV OSGUTIL_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(95):  if(NOT OSGUTIL_LIBRARY_DEBUG )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(97):  set(OSGUTIL_LIBRARY_DEBUG OSGUTIL_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(98):  set(OSGUTIL_LIBRARIES OSGUTIL_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindosgUtil.cmake(53):  include(/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(142):  include(/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(42):  function(FIND_PACKAGE_MESSAGE pkg msg details )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(143):  include(/usr/share/cmake-3.5/Modules/CMakeParseArguments.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(146):  macro(_FPHSA_FAILURE_MESSAGE _msg )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(158):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(187):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
/usr/share/cmake-3.5/Modules/FindosgUtil.cmake(54):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(osgUtil DEFAULT_MSG OSGUTIL_LIBRARY OSGUTIL_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(191):  set(options CONFIG_MODE HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(192):  set(oneValueArgs FAIL_MESSAGE VERSION_VAR FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(193):  set(multiValueArgs REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(194):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS FAIL_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(195):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE DEFAULT_MSG INDEX )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(197):  if(-1 EQUAL -1 )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(198):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(199):  set(FPHSA_REQUIRED_VARS OSGUTIL_LIBRARY;OSGUTIL_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(200):  set(FPHSA_VERSION_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(216):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(217):  set(FPHSA_FAIL_MESSAGE Could NOT find osgUtil )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(222):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(228):  if(NOT FPHSA_REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(232):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(234):  string(TOUPPER osgUtil _NAME_UPPER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(235):  string(TOLOWER osgUtil _NAME_LOWER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(237):  if(FPHSA_FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(243):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(244):  set(_FOUND_VAR OSGUTIL_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(249):  set(MISSING_VARS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(250):  set(DETAILS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(252):  set(FPHSA_FOUND_osgUtil TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(253):  foreach(_CURRENT_VAR OSGUTIL_LIBRARY;OSGUTIL_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGUTIL_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_osgUtil FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OSGUTIL_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGUTIL_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(257):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(258):  set(DETAILS [/usr/local/include] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(261):  if(FPHSA_FOUND_osgUtil )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(264):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(265):  set(osgUtil_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(266):  set(OSGUTIL_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(270):  unset(FOUND_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(271):  unset(MISSING_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(273):  if(FPHSA_HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(301):  set(VERSION_MSG  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(302):  set(VERSION_OK TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(303):  set(VERSION  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(306):  if(DEFINED osgUtil_FIND_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(364):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(365):  if(VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(370):  if(VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(371):  set(DETAILS [/usr/local/include][v()] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(378):  if(osgUtil_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(380):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(382):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(384):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(385):  if(NOT VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(387):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(388):  _FPHSA_FAILURE_MESSAGE(Could NOT find osgUtil (missing:  OSGUTIL_LIBRARY)  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(147):  if(osgUtil_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(149):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(150):  if(NOT osgUtil_FIND_QUIETLY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(151):  message(STATUS Could NOT find osgUtil (missing:  OSGUTIL_LIBRARY)  )
-- Could NOT find osgUtil (missing:  OSGUTIL_LIBRARY) 
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(394):  set(osgUtil_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(395):  set(OSGUTIL_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(206):  string(TOUPPER osgUtil _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(208):  if(OSGUTIL_FOUND OR OpenSceneGraph_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(209):  list(APPEND OPENSCENEGRAPH_INCLUDE_DIR /usr/local/include )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(210):  list(APPEND OPENSCENEGRAPH_LIBRARIES OSGUTIL_LIBRARY-NOTFOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(213):  if(OpenSceneGraph_MARK_AS_ADVANCED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(200):  if(OpenSceneGraph_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(201):  message(STATUS [ FindOpenSceneGraph.cmake: ]  Calling find_package(osgText  ) )
-- [ FindOpenSceneGraph.cmake:201 ] Calling find_package(osgText  )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(204):  find_package(osgText  )
/usr/share/cmake-3.5/Modules/FindosgText.cmake(49):  include(/usr/share/cmake-3.5/Modules/Findosg_functions.cmake )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(30):  function(OSG_FIND_PATH module header )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(56):  function(OSG_FIND_LIBRARY module library )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(113):  function(OSG_MARK_AS_ADVANCED _module )
/usr/share/cmake-3.5/Modules/FindosgText.cmake(50):  OSG_FIND_PATH(OSGTEXT osgText/Text )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(31):  string(TOUPPER OSGTEXT module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(34):  find_path(OSGTEXT_INCLUDE_DIR osgText/Text HINTS ENV OSGTEXT_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES include PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/FindosgText.cmake(51):  OSG_FIND_LIBRARY(OSGTEXT osgText )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(57):  string(TOUPPER OSGTEXT module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(59):  find_library(OSGTEXT_LIBRARY NAMES osgText HINTS ENV OSGTEXT_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(77):  find_library(OSGTEXT_LIBRARY_DEBUG NAMES osgTextd HINTS ENV OSGTEXT_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(95):  if(NOT OSGTEXT_LIBRARY_DEBUG )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(97):  set(OSGTEXT_LIBRARY_DEBUG OSGTEXT_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(98):  set(OSGTEXT_LIBRARIES OSGTEXT_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindosgText.cmake(53):  include(/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(142):  include(/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(42):  function(FIND_PACKAGE_MESSAGE pkg msg details )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(143):  include(/usr/share/cmake-3.5/Modules/CMakeParseArguments.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(146):  macro(_FPHSA_FAILURE_MESSAGE _msg )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(158):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(187):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
/usr/share/cmake-3.5/Modules/FindosgText.cmake(54):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(osgText DEFAULT_MSG OSGTEXT_LIBRARY OSGTEXT_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(191):  set(options CONFIG_MODE HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(192):  set(oneValueArgs FAIL_MESSAGE VERSION_VAR FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(193):  set(multiValueArgs REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(194):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS FAIL_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(195):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE DEFAULT_MSG INDEX )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(197):  if(-1 EQUAL -1 )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(198):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(199):  set(FPHSA_REQUIRED_VARS OSGTEXT_LIBRARY;OSGTEXT_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(200):  set(FPHSA_VERSION_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(216):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(217):  set(FPHSA_FAIL_MESSAGE Could NOT find osgText )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(222):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(228):  if(NOT FPHSA_REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(232):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(234):  string(TOUPPER osgText _NAME_UPPER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(235):  string(TOLOWER osgText _NAME_LOWER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(237):  if(FPHSA_FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(243):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(244):  set(_FOUND_VAR OSGTEXT_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(249):  set(MISSING_VARS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(250):  set(DETAILS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(252):  set(FPHSA_FOUND_osgText TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(253):  foreach(_CURRENT_VAR OSGTEXT_LIBRARY;OSGTEXT_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGTEXT_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_osgText FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OSGTEXT_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGTEXT_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(257):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(258):  set(DETAILS [/usr/local/include] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(261):  if(FPHSA_FOUND_osgText )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(264):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(265):  set(osgText_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(266):  set(OSGTEXT_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(270):  unset(FOUND_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(271):  unset(MISSING_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(273):  if(FPHSA_HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(301):  set(VERSION_MSG  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(302):  set(VERSION_OK TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(303):  set(VERSION  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(306):  if(DEFINED osgText_FIND_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(364):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(365):  if(VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(370):  if(VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(371):  set(DETAILS [/usr/local/include][v()] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(378):  if(osgText_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(380):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(382):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(384):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(385):  if(NOT VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(387):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(388):  _FPHSA_FAILURE_MESSAGE(Could NOT find osgText (missing:  OSGTEXT_LIBRARY)  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(147):  if(osgText_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(149):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(150):  if(NOT osgText_FIND_QUIETLY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(151):  message(STATUS Could NOT find osgText (missing:  OSGTEXT_LIBRARY)  )
-- Could NOT find osgText (missing:  OSGTEXT_LIBRARY) 
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(394):  set(osgText_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(395):  set(OSGTEXT_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(206):  string(TOUPPER osgText _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(208):  if(OSGTEXT_FOUND OR OpenSceneGraph_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(209):  list(APPEND OPENSCENEGRAPH_INCLUDE_DIR /usr/local/include )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(210):  list(APPEND OPENSCENEGRAPH_LIBRARIES OSGTEXT_LIBRARY-NOTFOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(213):  if(OpenSceneGraph_MARK_AS_ADVANCED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(200):  if(OpenSceneGraph_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(201):  message(STATUS [ FindOpenSceneGraph.cmake: ]  Calling find_package(osgViewer  ) )
-- [ FindOpenSceneGraph.cmake:201 ] Calling find_package(osgViewer  )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(204):  find_package(osgViewer  )
/usr/share/cmake-3.5/Modules/FindosgViewer.cmake(49):  include(/usr/share/cmake-3.5/Modules/Findosg_functions.cmake )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(30):  function(OSG_FIND_PATH module header )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(56):  function(OSG_FIND_LIBRARY module library )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(113):  function(OSG_MARK_AS_ADVANCED _module )
/usr/share/cmake-3.5/Modules/FindosgViewer.cmake(50):  OSG_FIND_PATH(OSGVIEWER osgViewer/Viewer )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(31):  string(TOUPPER OSGVIEWER module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(34):  find_path(OSGVIEWER_INCLUDE_DIR osgViewer/Viewer HINTS ENV OSGVIEWER_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES include PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/FindosgViewer.cmake(51):  OSG_FIND_LIBRARY(OSGVIEWER osgViewer )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(57):  string(TOUPPER OSGVIEWER module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(59):  find_library(OSGVIEWER_LIBRARY NAMES osgViewer HINTS ENV OSGVIEWER_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(77):  find_library(OSGVIEWER_LIBRARY_DEBUG NAMES osgViewerd HINTS ENV OSGVIEWER_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(95):  if(NOT OSGVIEWER_LIBRARY_DEBUG )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(97):  set(OSGVIEWER_LIBRARY_DEBUG OSGVIEWER_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(98):  set(OSGVIEWER_LIBRARIES OSGVIEWER_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindosgViewer.cmake(53):  include(/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(142):  include(/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(42):  function(FIND_PACKAGE_MESSAGE pkg msg details )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(143):  include(/usr/share/cmake-3.5/Modules/CMakeParseArguments.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(146):  macro(_FPHSA_FAILURE_MESSAGE _msg )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(158):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(187):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
/usr/share/cmake-3.5/Modules/FindosgViewer.cmake(54):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(osgViewer DEFAULT_MSG OSGVIEWER_LIBRARY OSGVIEWER_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(191):  set(options CONFIG_MODE HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(192):  set(oneValueArgs FAIL_MESSAGE VERSION_VAR FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(193):  set(multiValueArgs REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(194):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS FAIL_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(195):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE DEFAULT_MSG INDEX )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(197):  if(-1 EQUAL -1 )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(198):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(199):  set(FPHSA_REQUIRED_VARS OSGVIEWER_LIBRARY;OSGVIEWER_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(200):  set(FPHSA_VERSION_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(216):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(217):  set(FPHSA_FAIL_MESSAGE Could NOT find osgViewer )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(222):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(228):  if(NOT FPHSA_REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(232):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(234):  string(TOUPPER osgViewer _NAME_UPPER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(235):  string(TOLOWER osgViewer _NAME_LOWER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(237):  if(FPHSA_FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(243):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(244):  set(_FOUND_VAR OSGVIEWER_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(249):  set(MISSING_VARS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(250):  set(DETAILS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(252):  set(FPHSA_FOUND_osgViewer TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(253):  foreach(_CURRENT_VAR OSGVIEWER_LIBRARY;OSGVIEWER_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGVIEWER_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_osgViewer FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OSGVIEWER_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGVIEWER_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(257):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(258):  set(DETAILS [/usr/local/include] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(261):  if(FPHSA_FOUND_osgViewer )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(264):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(265):  set(osgViewer_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(266):  set(OSGVIEWER_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(270):  unset(FOUND_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(271):  unset(MISSING_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(273):  if(FPHSA_HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(301):  set(VERSION_MSG  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(302):  set(VERSION_OK TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(303):  set(VERSION  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(306):  if(DEFINED osgViewer_FIND_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(364):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(365):  if(VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(370):  if(VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(371):  set(DETAILS [/usr/local/include][v()] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(378):  if(osgViewer_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(380):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(382):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(384):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(385):  if(NOT VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(387):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(388):  _FPHSA_FAILURE_MESSAGE(Could NOT find osgViewer (missing:  OSGVIEWER_LIBRARY)  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(147):  if(osgViewer_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(149):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(150):  if(NOT osgViewer_FIND_QUIETLY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(151):  message(STATUS Could NOT find osgViewer (missing:  OSGVIEWER_LIBRARY)  )
-- Could NOT find osgViewer (missing:  OSGVIEWER_LIBRARY) 
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(394):  set(osgViewer_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(395):  set(OSGVIEWER_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(206):  string(TOUPPER osgViewer _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(208):  if(OSGVIEWER_FOUND OR OpenSceneGraph_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(209):  list(APPEND OPENSCENEGRAPH_INCLUDE_DIR /usr/local/include )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(210):  list(APPEND OPENSCENEGRAPH_LIBRARIES OSGVIEWER_LIBRARY-NOTFOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(213):  if(OpenSceneGraph_MARK_AS_ADVANCED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(200):  if(OpenSceneGraph_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(201):  message(STATUS [ FindOpenSceneGraph.cmake: ]  Calling find_package(osgWidget  ) )
-- [ FindOpenSceneGraph.cmake:201 ] Calling find_package(osgWidget  )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(204):  find_package(osgWidget  )
/usr/share/cmake-3.5/Modules/FindosgWidget.cmake(50):  include(/usr/share/cmake-3.5/Modules/Findosg_functions.cmake )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(30):  function(OSG_FIND_PATH module header )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(56):  function(OSG_FIND_LIBRARY module library )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(113):  function(OSG_MARK_AS_ADVANCED _module )
/usr/share/cmake-3.5/Modules/FindosgWidget.cmake(51):  OSG_FIND_PATH(OSGWIDGET osgWidget/Widget )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(31):  string(TOUPPER OSGWIDGET module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(34):  find_path(OSGWIDGET_INCLUDE_DIR osgWidget/Widget HINTS ENV OSGWIDGET_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES include PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/FindosgWidget.cmake(52):  OSG_FIND_LIBRARY(OSGWIDGET osgWidget )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(57):  string(TOUPPER OSGWIDGET module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(59):  find_library(OSGWIDGET_LIBRARY NAMES osgWidget HINTS ENV OSGWIDGET_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(77):  find_library(OSGWIDGET_LIBRARY_DEBUG NAMES osgWidgetd HINTS ENV OSGWIDGET_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(95):  if(NOT OSGWIDGET_LIBRARY_DEBUG )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(97):  set(OSGWIDGET_LIBRARY_DEBUG OSGWIDGET_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(98):  set(OSGWIDGET_LIBRARIES OSGWIDGET_LIBRARY-NOTFOUND PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindosgWidget.cmake(54):  include(/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(142):  include(/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(42):  function(FIND_PACKAGE_MESSAGE pkg msg details )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(143):  include(/usr/share/cmake-3.5/Modules/CMakeParseArguments.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(146):  macro(_FPHSA_FAILURE_MESSAGE _msg )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(158):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(187):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
/usr/share/cmake-3.5/Modules/FindosgWidget.cmake(55):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(osgWidget DEFAULT_MSG OSGWIDGET_LIBRARY OSGWIDGET_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(191):  set(options CONFIG_MODE HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(192):  set(oneValueArgs FAIL_MESSAGE VERSION_VAR FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(193):  set(multiValueArgs REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(194):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS FAIL_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(195):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE DEFAULT_MSG INDEX )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(197):  if(-1 EQUAL -1 )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(198):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(199):  set(FPHSA_REQUIRED_VARS OSGWIDGET_LIBRARY;OSGWIDGET_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(200):  set(FPHSA_VERSION_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(216):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(217):  set(FPHSA_FAIL_MESSAGE Could NOT find osgWidget )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(222):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(228):  if(NOT FPHSA_REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(232):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(234):  string(TOUPPER osgWidget _NAME_UPPER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(235):  string(TOLOWER osgWidget _NAME_LOWER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(237):  if(FPHSA_FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(243):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(244):  set(_FOUND_VAR OSGWIDGET_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(249):  set(MISSING_VARS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(250):  set(DETAILS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(252):  set(FPHSA_FOUND_osgWidget TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(253):  foreach(_CURRENT_VAR OSGWIDGET_LIBRARY;OSGWIDGET_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGWIDGET_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_osgWidget FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OSGWIDGET_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGWIDGET_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(257):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(258):  set(DETAILS [/usr/local/include] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(261):  if(FPHSA_FOUND_osgWidget )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(264):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(265):  set(osgWidget_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(266):  set(OSGWIDGET_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(270):  unset(FOUND_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(271):  unset(MISSING_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(273):  if(FPHSA_HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(301):  set(VERSION_MSG  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(302):  set(VERSION_OK TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(303):  set(VERSION  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(306):  if(DEFINED osgWidget_FIND_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(364):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(365):  if(VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(370):  if(VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(371):  set(DETAILS [/usr/local/include][v()] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(378):  if(osgWidget_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(380):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(382):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(384):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(385):  if(NOT VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(387):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(388):  _FPHSA_FAILURE_MESSAGE(Could NOT find osgWidget (missing:  OSGWIDGET_LIBRARY)  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(147):  if(osgWidget_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(149):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(150):  if(NOT osgWidget_FIND_QUIETLY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(151):  message(STATUS Could NOT find osgWidget (missing:  OSGWIDGET_LIBRARY)  )
-- Could NOT find osgWidget (missing:  OSGWIDGET_LIBRARY) 
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(394):  set(osgWidget_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(395):  set(OSGWIDGET_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(206):  string(TOUPPER osgWidget _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(208):  if(OSGWIDGET_FOUND OR OpenSceneGraph_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(209):  list(APPEND OPENSCENEGRAPH_INCLUDE_DIR /usr/local/include )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(210):  list(APPEND OPENSCENEGRAPH_LIBRARIES OSGWIDGET_LIBRARY-NOTFOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(213):  if(OpenSceneGraph_MARK_AS_ADVANCED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(200):  if(OpenSceneGraph_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(201):  message(STATUS [ FindOpenSceneGraph.cmake: ]  Calling find_package(osg  ) )
-- [ FindOpenSceneGraph.cmake:201 ] Calling find_package(osg  )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(204):  find_package(osg  )
/usr/share/cmake-3.5/Modules/Findosg.cmake(55):  include(/usr/share/cmake-3.5/Modules/Findosg_functions.cmake )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(30):  function(OSG_FIND_PATH module header )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(56):  function(OSG_FIND_LIBRARY module library )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(113):  function(OSG_MARK_AS_ADVANCED _module )
/usr/share/cmake-3.5/Modules/Findosg.cmake(56):  OSG_FIND_PATH(OSG osg/PositionAttitudeTransform )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(31):  string(TOUPPER OSG module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(34):  find_path(OSG_INCLUDE_DIR osg/PositionAttitudeTransform HINTS ENV OSG_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES include PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg.cmake(57):  OSG_FIND_LIBRARY(OSG osg )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(57):  string(TOUPPER OSG module_uc )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(59):  find_library(OSG_LIBRARY NAMES osg HINTS ENV OSG_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(77):  find_library(OSG_LIBRARY_DEBUG NAMES osgd HINTS ENV OSG_DIR ENV OSG_DIR ENV OSGDIR ENV OSG_ROOT   PATH_SUFFIXES lib PATHS /sw /opt/local /opt/csw /opt /usr/freeware )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(95):  if(NOT OSG_LIBRARY_DEBUG )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(97):  set(OSG_LIBRARY_DEBUG /usr/local/lib64 PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/Findosg_functions.cmake(98):  set(OSG_LIBRARIES /usr/local/lib64 PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/Findosg.cmake(59):  include(/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(142):  include(/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(42):  function(FIND_PACKAGE_MESSAGE pkg msg details )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(143):  include(/usr/share/cmake-3.5/Modules/CMakeParseArguments.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(146):  macro(_FPHSA_FAILURE_MESSAGE _msg )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(158):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(187):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
/usr/share/cmake-3.5/Modules/Findosg.cmake(60):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(osg DEFAULT_MSG OSG_LIBRARY OSG_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(191):  set(options CONFIG_MODE HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(192):  set(oneValueArgs FAIL_MESSAGE VERSION_VAR FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(193):  set(multiValueArgs REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(194):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS FAIL_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(195):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE DEFAULT_MSG INDEX )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(197):  if(-1 EQUAL -1 )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(198):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(199):  set(FPHSA_REQUIRED_VARS OSG_LIBRARY;OSG_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(200):  set(FPHSA_VERSION_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(216):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(217):  set(FPHSA_FAIL_MESSAGE Could NOT find osg )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(222):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(228):  if(NOT FPHSA_REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(232):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(234):  string(TOUPPER osg _NAME_UPPER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(235):  string(TOLOWER osg _NAME_LOWER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(237):  if(FPHSA_FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(243):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(244):  set(_FOUND_VAR OSG_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(249):  set(MISSING_VARS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(250):  set(DETAILS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(252):  set(FPHSA_FOUND_osg TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(253):  foreach(_CURRENT_VAR OSG_LIBRARY;OSG_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSG_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(257):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(258):  set(DETAILS [/usr/local/lib64] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSG_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(257):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(258):  set(DETAILS [/usr/local/lib64][/usr/local/include] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(261):  if(FPHSA_FOUND_osg )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(262):  set(osg_FOUND TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(263):  set(OSG_FOUND TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(270):  unset(FOUND_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(271):  unset(MISSING_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(273):  if(FPHSA_HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(301):  set(VERSION_MSG  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(302):  set(VERSION_OK TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(303):  set(VERSION  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(306):  if(DEFINED osg_FIND_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(364):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(365):  if(VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(370):  if(VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(371):  set(DETAILS [/usr/local/lib64][/usr/local/include][v()] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(378):  if(osg_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(379):  FIND_PACKAGE_MESSAGE(osg Found osg: /usr/local/lib64   [/usr/local/lib64][/usr/local/include][v()] )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(44):  if(NOT osg_FIND_QUIETLY )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(45):  string(REPLACE 
  details [/usr/local/lib64][/usr/local/include][v()] )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(46):  set(DETAILS_VAR FIND_PACKAGE_MESSAGE_DETAILS_osg )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(47):  if(NOT [/usr/local/lib64][/usr/local/include][v()] STREQUAL [/usr/local/lib64][/usr/local/include][v()] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(394):  set(osg_FOUND TRUE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(395):  set(OSG_FOUND TRUE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(206):  string(TOUPPER osg _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(208):  if(OSG_FOUND OR OpenSceneGraph_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(209):  list(APPEND OPENSCENEGRAPH_INCLUDE_DIR /usr/local/include )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(210):  list(APPEND OPENSCENEGRAPH_LIBRARIES /usr/local/lib64 )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(213):  if(OpenSceneGraph_MARK_AS_ADVANCED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(200):  if(OpenSceneGraph_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(201):  message(STATUS [ FindOpenSceneGraph.cmake: ]  Calling find_package(OpenThreads  ) )
-- [ FindOpenSceneGraph.cmake:201 ] Calling find_package(OpenThreads  )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(204):  find_package(OpenThreads  )
/usr/share/cmake-3.5/Modules/FindOpenThreads.cmake(61):  find_path(OPENTHREADS_INCLUDE_DIR OpenThreads/Thread HINTS ENV OPENTHREADS_INCLUDE_DIR ENV OPENTHREADS_DIR ENV OSG_INCLUDE_DIR ENV OSG_DIR ENV OSGDIR ENV OpenThreads_ROOT ENV OSG_ROOT   PATHS /sw /opt/local /opt/csw /opt /usr/freeware PATH_SUFFIXES include )
/usr/share/cmake-3.5/Modules/FindOpenThreads.cmake(82):  find_library(OPENTHREADS_LIBRARY NAMES OpenThreads OpenThreadsWin32 HINTS ENV OPENTHREADS_LIBRARY_DIR ENV OPENTHREADS_DIR ENV OSG_LIBRARY_DIR ENV OSG_DIR ENV OSGDIR ENV OpenThreads_ROOT ENV OSG_ROOT   PATHS /sw /opt/local /opt/csw /opt /usr/freeware PATH_SUFFIXES lib )
/usr/share/cmake-3.5/Modules/FindOpenThreads.cmake(103):  find_library(OPENTHREADS_LIBRARY_DEBUG NAMES OpenThreadsd OpenThreadsWin32d HINTS ENV OPENTHREADS_DEBUG_LIBRARY_DIR ENV OPENTHREADS_LIBRARY_DIR ENV OPENTHREADS_DIR ENV OSG_LIBRARY_DIR ENV OSG_DIR ENV OSGDIR ENV OpenThreads_ROOT ENV OSG_ROOT   PATHS /sw /opt/local /opt/csw /opt /usr/freeware PATH_SUFFIXES lib )
/usr/share/cmake-3.5/Modules/FindOpenThreads.cmake(125):  if(OPENTHREADS_LIBRARY_DEBUG )
/usr/share/cmake-3.5/Modules/FindOpenThreads.cmake(129):  else()
/usr/share/cmake-3.5/Modules/FindOpenThreads.cmake(130):  set(OPENTHREADS_LIBRARIES OPENTHREADS_LIBRARY-NOTFOUND )
/usr/share/cmake-3.5/Modules/FindOpenThreads.cmake(133):  include(/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(142):  include(/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(42):  function(FIND_PACKAGE_MESSAGE pkg msg details )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(143):  include(/usr/share/cmake-3.5/Modules/CMakeParseArguments.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(146):  macro(_FPHSA_FAILURE_MESSAGE _msg )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(158):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(187):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
/usr/share/cmake-3.5/Modules/FindOpenThreads.cmake(134):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(OpenThreads DEFAULT_MSG OPENTHREADS_LIBRARY OPENTHREADS_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(191):  set(options CONFIG_MODE HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(192):  set(oneValueArgs FAIL_MESSAGE VERSION_VAR FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(193):  set(multiValueArgs REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(194):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS FAIL_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(195):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE DEFAULT_MSG INDEX )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(197):  if(-1 EQUAL -1 )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(198):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(199):  set(FPHSA_REQUIRED_VARS OPENTHREADS_LIBRARY;OPENTHREADS_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(200):  set(FPHSA_VERSION_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(216):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(217):  set(FPHSA_FAIL_MESSAGE Could NOT find OpenThreads )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(222):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(228):  if(NOT FPHSA_REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(232):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(234):  string(TOUPPER OpenThreads _NAME_UPPER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(235):  string(TOLOWER OpenThreads _NAME_LOWER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(237):  if(FPHSA_FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(243):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(244):  set(_FOUND_VAR OPENTHREADS_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(249):  set(MISSING_VARS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(250):  set(DETAILS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(252):  set(FPHSA_FOUND_OpenThreads TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(253):  foreach(_CURRENT_VAR OPENTHREADS_LIBRARY;OPENTHREADS_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OPENTHREADS_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_OpenThreads FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OPENTHREADS_LIBRARY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OPENTHREADS_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(257):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(258):  set(DETAILS [/usr/local/include] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(261):  if(FPHSA_FOUND_OpenThreads )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(264):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(265):  set(OpenThreads_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(266):  set(OPENTHREADS_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(270):  unset(FOUND_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(271):  unset(MISSING_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(273):  if(FPHSA_HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(301):  set(VERSION_MSG  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(302):  set(VERSION_OK TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(303):  set(VERSION  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(306):  if(DEFINED OpenThreads_FIND_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(364):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(365):  if(VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(370):  if(VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(371):  set(DETAILS [/usr/local/include][v()] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(378):  if(OpenThreads_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(380):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(382):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(384):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(385):  if(NOT VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(387):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(388):  _FPHSA_FAILURE_MESSAGE(Could NOT find OpenThreads (missing:  OPENTHREADS_LIBRARY)  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(147):  if(OpenThreads_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(149):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(150):  if(NOT OpenThreads_FIND_QUIETLY )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(151):  message(STATUS Could NOT find OpenThreads (missing:  OPENTHREADS_LIBRARY)  )
-- Could NOT find OpenThreads (missing:  OPENTHREADS_LIBRARY) 
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(394):  set(OpenThreads_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(395):  set(OPENTHREADS_FOUND FALSE PARENT_SCOPE )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(206):  string(TOUPPER OpenThreads _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(208):  if(OPENTHREADS_FOUND OR OpenSceneGraph_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(209):  list(APPEND OPENSCENEGRAPH_INCLUDE_DIR /usr/local/include )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(210):  list(APPEND OPENSCENEGRAPH_LIBRARIES OPENTHREADS_LIBRARY-NOTFOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(213):  if(OpenSceneGraph_MARK_AS_ADVANCED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(218):  if(OPENSCENEGRAPH_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(219):  list(REMOVE_DUPLICATES OPENSCENEGRAPH_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(225):  set(_osg_component_founds )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(226):  if(OpenSceneGraph_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(227):  foreach(_osg_module osgDB;osgGA;osgUtil;osgText;osgViewer;osgWidget;osg;OpenThreads )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(228):  string(TOUPPER osgDB _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(229):  list(APPEND _osg_component_founds OSGDB_FOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(228):  string(TOUPPER osgGA _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(229):  list(APPEND _osg_component_founds OSGGA_FOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(228):  string(TOUPPER osgUtil _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(229):  list(APPEND _osg_component_founds OSGUTIL_FOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(228):  string(TOUPPER osgText _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(229):  list(APPEND _osg_component_founds OSGTEXT_FOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(228):  string(TOUPPER osgViewer _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(229):  list(APPEND _osg_component_founds OSGVIEWER_FOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(228):  string(TOUPPER osgWidget _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(229):  list(APPEND _osg_component_founds OSGWIDGET_FOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(228):  string(TOUPPER osg _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(229):  list(APPEND _osg_component_founds OSG_FOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(228):  string(TOUPPER OpenThreads _osg_module_UC )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(229):  list(APPEND _osg_component_founds OPENTHREADS_FOUND )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(233):  include(/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(142):  include(/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake )
/usr/share/cmake-3.5/Modules/FindPackageMessage.cmake(42):  function(FIND_PACKAGE_MESSAGE pkg msg details )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(143):  include(/usr/share/cmake-3.5/Modules/CMakeParseArguments.cmake )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(146):  macro(_FPHSA_FAILURE_MESSAGE _msg )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(158):  macro(_FPHSA_HANDLE_FAILURE_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(187):  function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG )
/usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake(234):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(OpenSceneGraph REQUIRED_VARS OPENSCENEGRAPH_LIBRARIES OPENSCENEGRAPH_INCLUDE_DIR OSGDB_FOUND;OSGGA_FOUND;OSGUTIL_FOUND;OSGTEXT_FOUND;OSGVIEWER_FOUND;OSGWIDGET_FOUND;OSG_FOUND;OPENTHREADS_FOUND VERSION_VAR OPENSCENEGRAPH_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(191):  set(options CONFIG_MODE HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(192):  set(oneValueArgs FAIL_MESSAGE VERSION_VAR FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(193):  set(multiValueArgs REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(194):  set(_KEYWORDS_FOR_EXTENDED_MODE CONFIG_MODE;HANDLE_COMPONENTS FAIL_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(195):  list(FIND _KEYWORDS_FOR_EXTENDED_MODE REQUIRED_VARS INDEX )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(197):  if(5 EQUAL -1 )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(201):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(203):  CMAKE_PARSE_ARGUMENTS(FPHSA CONFIG_MODE;HANDLE_COMPONENTS FAIL_MESSAGE;VERSION_VAR;FOUND_VAR REQUIRED_VARS REQUIRED_VARS OPENSCENEGRAPH_LIBRARIES;OPENSCENEGRAPH_INCLUDE_DIR;OSGDB_FOUND;OSGGA_FOUND;OSGUTIL_FOUND;OSGTEXT_FOUND;OSGVIEWER_FOUND;OSGWIDGET_FOUND;OSG_FOUND;OPENTHREADS_FOUND;VERSION_VAR;OPENSCENEGRAPH_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(205):  if(FPHSA_UNPARSED_ARGUMENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(209):  if(NOT FPHSA_FAIL_MESSAGE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(210):  set(FPHSA_FAIL_MESSAGE DEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(216):  if(xDEFAULT_MSG STREQUAL xDEFAULT_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(217):  set(FPHSA_FAIL_MESSAGE Could NOT find OpenSceneGraph )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(222):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(228):  if(NOT FPHSA_REQUIRED_VARS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(232):  list(GET FPHSA_REQUIRED_VARS 0 _FIRST_REQUIRED_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(234):  string(TOUPPER OpenSceneGraph _NAME_UPPER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(235):  string(TOLOWER OpenSceneGraph _NAME_LOWER )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(237):  if(FPHSA_FOUND_VAR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(243):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(244):  set(_FOUND_VAR OPENSCENEGRAPH_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(249):  set(MISSING_VARS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(250):  set(DETAILS  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(252):  set(FPHSA_FOUND_OpenSceneGraph TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(253):  foreach(_CURRENT_VAR OPENSCENEGRAPH_LIBRARIES;OPENSCENEGRAPH_INCLUDE_DIR;OSGDB_FOUND;OSGGA_FOUND;OSGUTIL_FOUND;OSGTEXT_FOUND;OSGVIEWER_FOUND;OSGWIDGET_FOUND;OSG_FOUND;OPENTHREADS_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OPENSCENEGRAPH_LIBRARIES )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_OpenSceneGraph FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OPENSCENEGRAPH_LIBRARIES )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OPENSCENEGRAPH_INCLUDE_DIR )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(257):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(258):  set(DETAILS [/usr/local/include] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGDB_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_OpenSceneGraph FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OPENSCENEGRAPH_LIBRARIES OSGDB_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGGA_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_OpenSceneGraph FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OPENSCENEGRAPH_LIBRARIES OSGDB_FOUND OSGGA_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGUTIL_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_OpenSceneGraph FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OPENSCENEGRAPH_LIBRARIES OSGDB_FOUND OSGGA_FOUND OSGUTIL_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGTEXT_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_OpenSceneGraph FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OPENSCENEGRAPH_LIBRARIES OSGDB_FOUND OSGGA_FOUND OSGUTIL_FOUND OSGTEXT_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGVIEWER_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_OpenSceneGraph FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OPENSCENEGRAPH_LIBRARIES OSGDB_FOUND OSGGA_FOUND OSGUTIL_FOUND OSGTEXT_FOUND OSGVIEWER_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSGWIDGET_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_OpenSceneGraph FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OPENSCENEGRAPH_LIBRARIES OSGDB_FOUND OSGGA_FOUND OSGUTIL_FOUND OSGTEXT_FOUND OSGVIEWER_FOUND OSGWIDGET_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OSG_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(257):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(258):  set(DETAILS [/usr/local/include][TRUE] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(254):  if(NOT OPENTHREADS_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(255):  set(FPHSA_FOUND_OpenSceneGraph FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(256):  set(MISSING_VARS  OPENSCENEGRAPH_LIBRARIES OSGDB_FOUND OSGGA_FOUND OSGUTIL_FOUND OSGTEXT_FOUND OSGVIEWER_FOUND OSGWIDGET_FOUND OPENTHREADS_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(261):  if(FPHSA_FOUND_OpenSceneGraph )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(264):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(265):  set(OpenSceneGraph_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(266):  set(OPENSCENEGRAPH_FOUND FALSE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(270):  unset(FOUND_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(271):  unset(MISSING_COMPONENTS_MSG )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(273):  if(FPHSA_HANDLE_COMPONENTS )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(301):  set(VERSION_MSG  )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(302):  set(VERSION_OK TRUE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(303):  set(VERSION 3.7.0 )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(306):  if(DEFINED OpenSceneGraph_FIND_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(307):  if(DEFINED OPENSCENEGRAPH_VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(309):  if(OpenSceneGraph_FIND_VERSION_EXACT )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(345):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(346):  if(OpenSceneGraph_FIND_VERSION VERSION_GREATER VERSION )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(349):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(350):  set(VERSION_MSG (found suitable version "3.7.0", minimum required is "3.0.0") )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(370):  if(VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(371):  set(DETAILS [/usr/local/include][TRUE][v3.7.0(3.0.0)] )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(378):  if(OpenSceneGraph_FOUND )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(380):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(382):  if(FPHSA_CONFIG_MODE )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(384):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(385):  if(NOT VERSION_OK )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(387):  else()
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(388):  _FPHSA_FAILURE_MESSAGE(Could NOT find OpenSceneGraph (missing:  OPENSCENEGRAPH_LIBRARIES OSGDB_FOUND OSGGA_FOUND OSGUTIL_FOUND OSGTEXT_FOUND OSGVIEWER_FOUND OSGWIDGET_FOUND OPENTHREADS_FOUND) (found suitable version "3.7.0", minimum required is "3.0.0") )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(147):  if(OpenSceneGraph_FIND_REQUIRED )
/usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake(148):  message(FATAL_ERROR Could NOT find OpenSceneGraph (missing:  OPENSCENEGRAPH_LIBRARIES OSGDB_FOUND OSGGA_FOUND OSGUTIL_FOUND OSGTEXT_FOUND OSGVIEWER_FOUND OSGWIDGET_FOUND OPENTHREADS_FOUND) (found suitable version "3.7.0", minimum required is "3.0.0") )
CMake Error at /usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake:148 (message):
  Could NOT find OpenSceneGraph (missing: OPENSCENEGRAPH_LIBRARIES
  OSGDB_FOUND OSGGA_FOUND OSGUTIL_FOUND OSGTEXT_FOUND OSGVIEWER_FOUND
  OSGWIDGET_FOUND OPENTHREADS_FOUND) (found suitable version "3.7.0", minimum
  required is "3.0.0")
Call Stack (most recent call first):
  /usr/share/cmake-3.5/Modules/FindPackageHandleStandardArgs.cmake:388 (_FPHSA_FAILURE_MESSAGE)
  /usr/share/cmake-3.5/Modules/FindOpenSceneGraph.cmake:234 (FIND_PACKAGE_HANDLE_STANDARD_ARGS)
  CMakeLists.txt:130 (FIND_PACKAGE)


-- Configuring incomplete, errors occurred!
See also "/home/hallmw/Projects/osgQt/CMakeFiles/CMakeOutput.log".
